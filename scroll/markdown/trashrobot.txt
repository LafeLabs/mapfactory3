
# Book of Trash Robot


## Get parts, assemble

###  Buy all the Arduino stuff

### Buy the circuit boards from pcbway

5 boards:
- water: uno shield
- fire: dual h bridge
- earth: buttons
- air: GOSP
- aether: EC probe relaxation oscillator

### buy digikey parts

links to shopping carts(1,2,3,4,5, and all together)

linked markdown bom tables

### buy samtec parts

linked markdown bom tables, photos, and detailed part number documentation for figuring out lengths of cables, types of connector etc. 

### buy random stuff from adafruit, amazon, sparkfun

sensors, neopixel arrays, ADC's, other arduinos, solder paste, solder, flux, soldering irons, solder hot air rework station, heater wire, thermometers, 

### find upcycled parts for robots/machines

### Assemble circuit boards

### Assemble robots/machines

### program, test and deploy robots/machines

here is where all the code goes

```

/*
www.trashrobot.org
FREE, PUBLIC DOMAIN
NO COPYRIGHT

STEPPER KNOB VELOCITY


this code has some mysterious memory problem and freezes after a minute or two. fix!

*/

int pinArray[] = {10,12,11,13};
int pinIndex = 0;
int pulseTime = 10;//ms
int knob = 512;
int x = 512;

int maxTime = 100;
int minTime = 10;

void setup() {
  Serial.begin(115200);
  pinMode(pinArray[0],OUTPUT);
  pinMode(pinArray[1],OUTPUT); 
  pinMode(pinArray[2],OUTPUT); 
  pinMode(pinArray[3],OUTPUT);
  digitalWrite(pinArray[0],LOW);
  digitalWrite(pinArray[1],LOW);
  digitalWrite(pinArray[2],LOW);
  digitalWrite(pinArray[3],LOW);
  knob = analogRead(A2);  
}

void loop() {
  knob = analogRead(A2);  
  if(knob > 612){
     pulseTime = maxTime - (maxTime - minTime)*(knob - 612.0)/412.0;
     x++;
     digitalWrite(pinArray[x%4],HIGH);
     delay(pulseTime);
     digitalWrite(pinArray[x%4],LOW);
     Serial.println(pinArray[x%4]);  

  }
  if(knob < 412){
     pulseTime = maxTime - (maxTime - minTime)*(412.0 - knob)/412.0;
     x--;
     digitalWrite(pinArray[x%4],HIGH);
     delay(pulseTime);
     digitalWrite(pinArray[x%4],LOW);
     Serial.println(pinArray[x%4]);  
  }
  
  if(x > 1024){
    x = 0;
  }
  if(x < -1024){
    x = 0;
  }
}
 
  
```


#### Stepper knob direct drive

```

/*
www.trashrobot.org
FREE, PUBLIC DOMAIN
NO COPYRIGHT

STEPPER KNOB DIRECT DRIVE

*/

int pinArray[] = {10,12,11,13};
int pinIndex = 0;
int pulseTime = 10;//ms
int knob = 512;
int x = 512;

void setup() {
  Serial.begin(115200);
  pinMode(pinArray[0],OUTPUT);
  pinMode(pinArray[1],OUTPUT); 
  pinMode(pinArray[2],OUTPUT); 
  pinMode(pinArray[3],OUTPUT);
  digitalWrite(pinArray[0],LOW);
  digitalWrite(pinArray[1],LOW);
  digitalWrite(pinArray[2],LOW);
  digitalWrite(pinArray[3],LOW);
  knob = analogRead(A2);  
  x = knob;
}

void loop() {
  knob = analogRead(A2);  

  if(abs(x - knob) > 5){
     if(x > knob){
        x = x - 5;
     }
     else{
        x = x + 5;
     }
     digitalWrite(pinArray[x%4],HIGH);
     delay(pulseTime);
     digitalWrite(pinArray[x%4],LOW);
     delay(pulseTime);
     Serial.println(pinArray[x%4]);  
  }
 
 //    Serial.println(knob); 
 
  //Serial.print(","); 
  //Serial.println(x); 
  //delay(20);
  
}
```

### details of the GOSP

### Extensions, applications

### Path of robot factory




We shall build a trash robot factory.  This is a factory for building factories for building trash robots.  That is not the same as building robots!  We are building the factory to build the factorieS.  A meta-factory.  Minimal product is thus not things like xyzmu robot or vibrational robot, but *elements* and motivation, basic documentation, and most importantly systems of replication: how to build a factory: use of action cards, maps, scrolls, books, etc.  

Self replicating automation

## Five elements:

1. structure: skeletron, thick cardboard,  sticks with added hardware, simple woodworking from broken shipping pallets
2. circuit boards: see the five boards
3. off the shelf parts, arduino, usb,batteries etc, 
4. component electronics: mostly orders from digikey and samtec
5. upcycled/scavenged materials: motors, components, buttons, switches, pcb's, eventually *everything* including transistors and microprocessors


## five  circuit boards:

1. Dual H bridge
2. 8 button board
3. GOSP optical pickup board
4. Relaxation oscillator with audio output and knobs
5. Generic UNO Shield with many applications


## The machines


- simple upcycled motor and power supply with knob and buttons control
- same but with stepper motor
- simple manual control xy DC motor bang boom config
- same with steppers
- xyz dc, steppers
- how to program, geometron, GOSP system, how to manage the computer side
- specific xyz for optical stages with small motion in z direction, how to use that for things
- relaxation oscillator for audio feedback of electrochemical interaction, integration into xyz stepper from optical stages
- basic vibration motor, large, for smashing/chipping etc
- various tpyes of vibration motor, of various sizes
- rotational motor with trash coils
- coil winding machine
- rock polishing machine
- rock or ceramic/brick  or wood chipping/carving machine
- heated tool with feedback on xyz control for editing plastic, as well as electrochemistry
- tribo-electric generator for high voltages from rotation
- water pump
- air pump
- vacuum pump
- Trash Magic stick with light, terminal, server, batteries, etc, 
- pressure sensor, temperature sensor, gesture sensor, 

how to build it all

where to go from here


### summary: 
the five elements, purpose of the system, how this leads to the technological complete set, how to view this system as a quasi "business" but totally decentralized, concept of horizontal manufacturing and how that scales.

### Build the circuits, test them:

5 circuits: buttons, shield, dual h bridge, relaxation oscillator, gosp board

### Techniques

cardboard and glue, skeletron, boards, upcycling, soldering, desoldering, heat guns, solder without irons or heat guns, pcb upcyling

### Assembly plans for each machine

### Details of Software Control

How Geometron changes how we can relate to machine automation control.  How to do "dumb" GOSP control.  How to do standard GOSP.  How to write your own GOSP protocols.  How to use Geometron to build web based programming for custom applications without any non geometric code.

### Applications

imaging, pumps, cooling, heating, additive mfg, transformative mfg with electrochemistry, chipping at stone, data storage, art, circuit editing, fabrication of active circuits, editing of upcycled circuits, generic vibration and rotation tools, novel electrical and electrochemical devices fabricated with xyzmu, automation on the fly for existing heavy and light industries

### Replication

action cards, maps, this book

### the way forward

How to get from this set to a technologically complete set, replacing the components with fully upcycled components. Building out the various systems: aluminum oxide systems, housing with a/c and heat, power generation and storage, nanoscale fabrication, micro, mm scale fab, full path from here to complete set.  This is where we have to point to the next Great Works: alchemy, etc.
